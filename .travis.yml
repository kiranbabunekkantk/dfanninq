language: cpp

sudo: enabled

compiler:
  - gcc

matrix:
  include:
    - name: CUDA10,python2.7
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      dist: bionic
      language: python
      python: "2.7"
    - name: CUDA10,python3.6
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      dist: bionic
      language: python
      python: "3.6"
    - name: CUDA10,python3.7
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      dist: bionic
      language: python
      python: "3.7"

before_install:
  - set -e
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - sudo apt install xorg-dev libglu1-mesa-dev
  - sudo apt clean
  - sudo ln -s /usr/local/cuda-${CUDA_SHORT} /usr/local/cuda
  - CUDA_HOME=/usr/local/cuda
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - CMAKE_VERSION=3.16.3
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      echo CMAKE_URL=${CMAKE_URL}
      mkdir cmake-${CMAKE_VERSION} && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake-${CMAKE_VERSION}
      export PATH=${PWD}/cmake-${CMAKE_VERSION}/bin:${PATH}
    fi
  - cmake --version
  - set +e

before_script:
  - set -e
  - mkdir build
  - cd build
  - cmake -DPYTHON_EXECUTABLE=`which python` ..
  - set +e

script: make -j4